{"local":{"name":"Back Up Your n8n Workflows To Github","isArchived":false,"nodes":[{"parameters":{},"id":"8b341bcb-a2ac-4011-9354-0b2523e23024","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[680,-100],"typeVersion":1},{"parameters":{"content":"## Subworkflow","height":731.7039821513649,"width":1910.7813046051347,"color":6},"id":"afb502e1-704c-46ac-8494-45a547a7b062","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[160,280],"typeVersion":1},{"parameters":{"filters":{},"requestOptions":{}},"id":"13c2854d-af92-46cd-86dd-473ec5ff2d6c","name":"n8n","type":"n8n-nodes-base.n8n","position":[1080,0],"typeVersion":1,"credentials":{"n8nApi":{"id":"YPGRcUChnGCNrhRb","name":"n8n account"}}},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"1b881537-d296-4a16-a094-5b8a67807356","name":"Return","type":"n8n-nodes-base.set","position":[1920,480],"typeVersion":3.3},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"fce813e6-ec95-4a6e-8f5f-dad7fe630db6","name":"Get File","type":"n8n-nodes-base.httpRequest","position":[880,360],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}],"combinator":"and"},"options":{}},"id":"86bc15d8-de01-4043-accc-35ca171ebab5","name":"If file too large","type":"n8n-nodes-base.if","position":[640,380],"typeVersion":2},{"parameters":{},"id":"2729f459-76c4-490c-8bd0-307ed4a55a54","name":"Merge Items","type":"n8n-nodes-base.merge","position":[640,640],"typeVersion":2},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"},"id":"7aae294f-5fd5-47d3-a29e-5b90afff32f7","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[840,640],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"26a36d63-6186-4adf-bc7e-d3272096236a","name":"Check Status","type":"n8n-nodes-base.switch","position":[1240,640],"typeVersion":1},{"parameters":{},"id":"519d5626-36b8-4c94-9153-ccf1568b22f4","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","position":[1460,480],"typeVersion":1},{"parameters":{},"id":"7b370507-f60f-47f2-ba55-7e6e1086f0bf","name":"File is different","type":"n8n-nodes-base.noOp","position":[1460,640],"typeVersion":1},{"parameters":{},"id":"c3c5edb3-a6cb-443d-a83d-277d3175c5da","name":"File is new","type":"n8n-nodes-base.noOp","position":[1460,840],"typeVersion":1},{"parameters":{"resource":"file","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"44a22baa-83d1-4651-89e4-a6d5a139404e","name":"Create new file","type":"n8n-nodes-base.github","position":[1680,840],"typeVersion":1,"webhookId":"c9a7d960-3079-48f9-9277-e73afb7dca5c","credentials":{"githubApi":{"id":"J9LUWfUfrJZjYYrU","name":"ivan"}}},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config').first().item.repo_name }}"},"filePath":"={{ $('Config').first().item.repo_path }}{{ $json.subPath }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"997b2b20-ca52-415b-9ef6-ca751e10efba","name":"Edit existing file","type":"n8n-nodes-base.github","position":[1680,640],"typeVersion":1,"webhookId":"baec8e9d-3029-489e-90aa-c74c6de96afb","credentials":{"githubApi":{"id":"J9LUWfUfrJZjYYrU","name":"ivan"}}},{"parameters":{"options":{}},"id":"9540b265-407b-4c66-81af-528a63dd06b2","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[1280,0],"typeVersion":3},{"parameters":{"rule":{"interval":[{"triggerAtHour":1,"triggerAtMinute":33}]}},"id":"0629047f-09c7-4cf4-997a-8a7a6fc155b5","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[680,100],"typeVersion":1.2},{"parameters":{"assignments":{"assignments":[{"id":"dae43d3b-56e5-4098-b602-862ebf5cd073","name":"subPath","type":"string","value":"={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"}]},"includeOtherFields":true,"options":{}},"id":"b8476c7a-f4b0-4150-b268-e7c787d1e2be","name":"Create sub path","type":"n8n-nodes-base.set","position":[1040,640],"typeVersion":3.3},{"parameters":{"content":"## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.","height":417,"width":385,"color":4},"id":"4661e395-0e1a-4bd2-8d2d-01ae6b01b923","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[200,-180],"typeVersion":1},{"parameters":{"content":"## Main workflow loop","height":416.1856906618075,"width":1272.6408145680155,"color":7},"id":"c2522ca0-8549-4538-b96c-1dcba2bcebd7","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[640,-180],"typeVersion":1},{"parameters":{"workflowId":"={{ $workflow.id }}","mode":"each","options":{}},"id":"31d6c8be-ce6a-4dce-a974-7dcf41dffb26","name":"Execute Workflow","type":"n8n-nodes-base.executeWorkflow","position":[1500,20],"typeVersion":1,"onError":"continueErrorOutput"},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=âœ… Backup has completed - {{ $('n8n').all().length }} workflows have been processed.","otherOptions":{}},"id":"f3960249-9ae6-4127-afbd-f34f2fefb659","name":"Completed Notification","type":"n8n-nodes-base.slack","position":[1500,-160],"webhookId":"a0c6e8c8-5d71-40fa-b02b-63a7ed5726c4","executeOnce":true,"typeVersion":2.2},{"parameters":{"select":"channel","channelId":{"__rl":true,"mode":"name","value":"#notifications"},"text":"=:x: Failed to backup {{ $('Loop Over Items').item.json.id }}","otherOptions":{"includeLinkToWorkflow":false}},"id":"bd7ade0b-c624-4ab0-af08-a019b934fd63","name":"Failed Flows","type":"n8n-nodes-base.slack","position":[1700,40],"webhookId":"2a092edb-de12-490f-931b-34d70e7d7696","typeVersion":2.2},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"value":"={{ $('Config').first().json.repo_owner }}","mode":""},"repository":{"__rl":true,"value":"={{ $('Config').first().json.repo_name }}","mode":""},"filePath":"={{ $('Config').first().json.repo_path }}{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"c42922a7-9d42-4fd7-8b2f-cad7b41ec244","name":"Get file data","type":"n8n-nodes-base.github","position":[440,380],"typeVersion":1,"alwaysOutputData":true,"webhookId":"3c68058d-daca-454f-979c-6db4ab36a01f","credentials":{"githubApi":{"id":"J9LUWfUfrJZjYYrU","name":"ivan"}},"continueOnFail":true},{"parameters":{"assignments":{"assignments":[{"id":"8f6d1741-772f-462a-811f-4c334185e4f0","name":"repo_owner","type":"string","value":"=tyler-and-ivan"},{"id":"8cac215c-4fd7-422f-9fd2-6b2d1e5e0383","name":"repo_name","type":"string","value":"=n8n-workflow"},{"id":"eee305e9-4164-462a-86bd-80f0d58a31ae","name":"repo_path","type":"string","value":"=https://github.com/tyler-and-ivan/n8n-workflow"}]},"includeOtherFields":true,"options":{}},"id":"4b17d070-f1c0-4a61-b7df-dcadc5a69abf","name":"Config","type":"n8n-nodes-base.set","position":[440,660],"typeVersion":3.4}],"connections":{"n8n":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Config":{"main":[[{"node":"Get file data","type":"main","index":0},{"node":"Merge Items","type":"main","index":1}]]},"Get File":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"Create sub path","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"Failed Flows":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Create sub path":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Config","type":"main","index":0}]]},"Execute Workflow":{"main":[[{"node":"Loop Over Items","type":"main","index":0}],[{"node":"Failed Flows","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"n8n","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get File","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"On clicking 'execute'":{"main":[[{"node":"n8n","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"triggerCount":0,"tags":[]},"status":"new"}